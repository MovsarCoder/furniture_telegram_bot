from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from database.crud import CrudCategory, CrudFurniture
from keyboard.button_template import country_kb
from keyboard.keyboard_builder import make_row_keyboards
from states.states import NewFurnitureStates

router = Router()


@router.callback_query(F.data == 'new_furniture')
async def new_furniture_function(callback_query: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await callback_query.answer()

    text = (
        "ü™Ñ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –º–µ–±–µ–ª–∏</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ <b>–æ–ø–∏—Å–∞–Ω–∏–µ</b> –º–µ–±–µ–ª–∏ ‚Äî —É–∫–∞–∂–∏—Ç–µ –µ—ë –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, —Å—Ç–∏–ª—å –∏–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª.\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n<code>–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∫–æ–∂–∞–Ω—ã–π –¥–∏–≤–∞–Ω —Å –º—è–≥–∫–æ–π –æ–±–∏–≤–∫–æ–π –∏ –ø—Ä–æ—á–Ω—ã–º –∫–∞—Ä–∫–∞—Å–æ–º.</code>"
    )

    await callback_query.message.answer(text)
    await state.set_state(NewFurnitureStates.description)


@router.message(NewFurnitureStates.description)
async def get_description_new_furniture(message: types.Message, state: FSMContext):
    description_furniture = (message.text or '').strip()
    if not description_furniture:
        await message.answer("‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    await state.update_data(description_new_furniture=description_furniture)

    crud = CrudCategory()
    get_categories = await crud.get_all_categories()
    categories = [category_name.name for category_name in get_categories]

    if not categories:
        await message.answer("üì≠ –í –±–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ–±–µ–ª–∏.")
        await state.clear()
        return

    text = (
        "‚ú® –û—Ç–ª–∏—á–Ω–æ!\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ <b>–∫–∞—Ç–µ–≥–æ—Ä–∏—é</b> –¥–ª—è —ç—Ç–æ–π –º–µ–±–µ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ üëá"
    )

    await message.answer(text, reply_markup=make_row_keyboards(categories))
    await state.set_state(NewFurnitureStates.category)


@router.message(NewFurnitureStates.category)
async def get_category(message: types.Message, state: FSMContext):
    category_name = (message.text or '').strip()

    if not category_name:
        await message.answer("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.")
        return

    await state.update_data(category_name=category_name)

    text = (
        f"üóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—ã–±—Ä–∞–Ω–∞: <b>{category_name}</b>\n\n"
        "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ <b>—Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è</b> –º–µ–±–µ–ª–∏ üåç\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:"
    )

    await message.answer(text, reply_markup=make_row_keyboards(country_kb))
    await state.set_state(NewFurnitureStates.country)


@router.message(NewFurnitureStates.country)
async def get_country(message: types.Message, state: FSMContext):
    country_name = (message.text or '').strip()

    if not country_name:
        await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.")
        return

    data = await state.get_data()
    description = data.get("description_new_furniture", '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
    category_name = data.get("category_name", "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")

    crud = CrudFurniture()
    new_furniture = await crud.create_furniture(
        description=description,
        category=category_name,
        country=country_name
    )

    if not new_furniture:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –º–µ–±–µ–ª–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    text = (
        "üéâ <b>–ú–µ–±–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!</b>\n\n"
        f"<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {category_name}\n"
        f"<b>–°—Ç—Ä–∞–Ω–∞:</b> {country_name}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {description}\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ! ‚úÖ"
    )

    await message.answer(text, reply_markup=types.ReplyKeyboardRemove())
    await state.clear()
