"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞.
"""

from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from keyboard.button_template import start_kb
from keyboard.keyboard_builder import make_row_inline_keyboards

router = Router()


@router.callback_query(F.data == "back_to_main")
async def back_to_main_callback(callback_query: types.CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    welcome_text = (
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –º–µ–±–µ–ª–∏ ‚Äî –∑–¥–µ—Å—å –≤—ã –ª–µ–≥–∫–æ –Ω–∞–π–¥—ë—Ç–µ –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑ –Ω–∞ –º–µ–±–µ–ª—å –¥–ª—è "
        "–≤—Å–µ—Ö –∫–æ–º–Ω–∞—Ç. –ù–∏–∂–µ ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–¥–µ–ª–∏, –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å "
        "–∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –º–∏–Ω–∏-–∑–∞–∫–∞–∑.\n\n"
        "üîπ –ù–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –∫–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å.\n"
        "üîπ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω.\n\n"
        "–ß–µ–º –Ω–∞—á–Ω—ë–º? –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –º–µ–Ω—é üëá"
    )
    
    await callback_query.message.edit_text(
        welcome_text,
        reply_markup=make_row_inline_keyboards(start_kb)
    )
    await callback_query.answer()