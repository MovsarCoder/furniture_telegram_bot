"""
–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –º–µ–±–µ–ª–∏.
–ó–∞–º–µ–Ω—è–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –º–µ–±–µ–ª–∏.
"""

from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from keyboard.button_template import contry_of_origin_kb, kitchen_subcategory_kb
from keyboard.keyboard_builder import make_row_inline_keyboards
from .navigation_handler import back_to_main_callback

router = Router()

# –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç–∏–ø–æ–≤ –º–µ–±–µ–ª–∏
FURNITURE_NAMES = {
    'sleep_furniture': '–°–ø–∞–ª—å–Ω–∞—è –º–µ–±–µ–ª—å',
    'kitchen_furniture': '–ö—É—Ö–æ–Ω–Ω–∞—è –º–µ–±–µ–ª—å',
    'soft_furniture': '–ú—è–≥–∫–∞—è –º–µ–±–µ–ª—å',
    'tables_chairs': '–°—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è',
    'cabinets_commodes': '–¢—É–º–±—ã –∏ –∫–æ–º–æ–¥—ã',
    'bed_furniture': '–ö—Ä–æ–≤–∞—Ç–∏',
    'mattresses': '–ú–∞—Ç—Ä–∞—Å—ã',
    'wardrobes': '–®–∫–∞—Ñ—ã'
}

# –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫—É—Ö–æ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏
KITCHEN_SUBCATEGORIES = {
    'straight_kitchen': 'üìè –ü—Ä—è–º–∞—è –∫—É—Ö–Ω—è',
    'corner_kitchen': 'üìê –£–≥–ª–æ–≤–∞—è –∫—É—Ö–Ω—è'
}

# –°–ª–æ–≤–∞—Ä—å —Å—Ç—Ä–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
ORIGIN_NAMES = {
    "russian_origin": "üá∑üá∫ –†–æ—Å—Å–∏—è",
    "turkey_origin": "üáπüá∑ –¢—É—Ä—Ü–∏—è"
}

# –¢–∏–ø—ã –º–µ–±–µ–ª–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
TYPES_WITH_ORIGIN = {'sleep_furniture', 'soft_furniture', 'tables_chairs'}

# –¢–∏–ø—ã –º–µ–±–µ–ª–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
TYPES_WITH_SUBCATEGORIES = {'kitchen_furniture'}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –º–µ–±–µ–ª–∏.
@router.callback_query(F.data.in_(FURNITURE_NAMES.keys()))
async def furniture_callback(callback_query: types.CallbackQuery, state: FSMContext):
    furniture_type = callback_query.data
    await state.update_data(type_furniture=furniture_type)

    # –ï—Å–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –º–µ–±–µ–ª–∏ –µ—Å—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if furniture_type in TYPES_WITH_SUBCATEGORIES:
        await callback_query.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫—É—Ö–æ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏:",
            reply_markup=make_row_inline_keyboards(kitchen_subcategory_kb)
        )

    # –ï—Å–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –º–µ–±–µ–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
    elif furniture_type in TYPES_WITH_ORIGIN:
        await callback_query.message.edit_text(
            "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:",
            reply_markup=make_row_inline_keyboards(contry_of_origin_kb)
        )
    else:
        # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –º–µ–±–µ–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –¥–æ—Å—Ç—É–ø–µ
        furniture_name = FURNITURE_NAMES.get(furniture_type, '–ú–µ–±–µ–ª—å')
        await callback_query.message.edit_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {furniture_name}\n\n"
            "–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!"
        )

    await callback_query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫—É—Ö–æ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
@router.callback_query(F.data.in_(KITCHEN_SUBCATEGORIES.keys()))
@router.callback_query(F.data == "back_to_main")
async def kitchen_subcategory_callback(callback_query: types.CallbackQuery, state: FSMContext):
    if callback_query.data == "back_to_main":
        await back_to_main_callback(callback_query, state)

    else:
        # –í—ã–±—Ä–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ö–æ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏
        subcategory = callback_query.data
        subcategory_name = KITCHEN_SUBCATEGORIES.get(subcategory, '–ö—É—Ö–Ω—è')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é
        await state.update_data(kitchen_subcategory=subcategory)

        await callback_query.message.edit_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {subcategory_name}\n\n"
            "–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!"
        )

    await callback_query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞.
@router.callback_query(F.data.in_(ORIGIN_NAMES.keys()))
async def origin_callback(callback_query: types.CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    furniture_type = user_data.get('type_furniture', 'sleep_furniture')

    origin_type = callback_query.data

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
    await state.update_data(origin_type=origin_type)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    furniture_name = FURNITURE_NAMES.get(furniture_type, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –º–µ–±–µ–ª–∏')
    origin_name = ORIGIN_NAMES.get(origin_type, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

    await callback_query.message.edit_text(
        f"–í–∞—à –≤—ã–±–æ—Ä:\n"
        f"‚Ä¢ –¢–∏–ø –º–µ–±–µ–ª–∏: {furniture_name}\n"
        f"‚Ä¢ –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: {origin_name}\n\n"
        "–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!"
    )

    await callback_query.answer()
